dnl Process this file with autoconf to produce a configure script.
AC_INIT(romloader/byteswap.c)
AM_INIT_AUTOMAKE(fake64,0.0.3)
AM_CONFIG_HEADER(include/config.h)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_AWK
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for libraries.
dnl Replace `main' with a function in -ldl:
AC_CHECK_LIB(dl, dlopen)

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

have_x86=yes
AC_ARG_ENABLE(x86,
[  --enable-x86            enable x86 assembly [default=autodetect]],
  have_x86=$enableval)
if test "x$have_x86" = xyes; then
  SYS_AS_CPUID
  if test x$cv_sys_as_cpuid = xyes; then
    AC_DEFINE(USE_X86_ASM, 1, [x86 assembly])
  else
    have_x86=no
  fi
fi

have_mmx=$have_x86
AC_ARG_ENABLE(mmx,
[  --enable-mmx            enable MMX support [default=autodetect]],
  have_mmx=$enableval)
if test "x$have_mmx" = xyes; then
  SYS_AS_MMX
  if test x$cv_sys_as_MMX = xyes; then
    AC_DEFINE(USE_MMX_ASM, 1, [MMX support])
  else
    echo 2>&1 "*******************************************************************************"
    echo 2>&1 " The installed assembler does not support the MMX command set."
    echo 2>&1 " Update your binutils package if you want to compile MMX support."
    echo 2>&1 "*******************************************************************************"
    have_mmx=no
  fi
fi

have_3dnow=$have_x86
AC_ARG_ENABLE(3dnow,
[  --enable-3dnow          enable 3Dnow support [default=autodetect]],
  have_3dnow=$enableval)
if test "x$have_3dnow" = xyes; then
  SYS_AS_3DNOW
  if test x$cv_sys_as_3DNow = xyes; then
    AC_DEFINE(USE_3DNOW_ASM, 1, [3dnow! support])
  else
    echo 2>&1 "*******************************************************************************"
    echo 2>&1 " The installed assembler does not support the 3Dnow! command set."
    echo 2>&1 " Update your binutils package if you want to compile 3Dnow! support."
    echo 2>&1 "*******************************************************************************"
    have_3dnow=no
  fi
fi

dnl ------------------------------------------
dnl SSE support
have_sse=no
AC_ARG_ENABLE(sse,
[  --enable-sse            enable SSE support [default=no]],
  have_sse=$enableval)
if test "x$have_sse" = xyes; then
  SYS_AS_SSE
  if test x$cv_sys_as_SSE = xyes; then
    AC_DEFINE(USE_SSE_ASM, 1, [SSE SUPPORT])
    echo 2>&1 "*******************************************************************************"
    echo 2>&1 " You have decided to compile SSE support."
    echo 2>&1 " If you have a Pentium III and want to use SSE, make sure your kernel"
    echo 2>&1 " supports PIII SSE instructions.  Linux kernels prior to 2.4.0 may need the"
    echo 2>&1 " patch from http://www.redhat.com/~dledford/"
    echo 2>&1 "*******************************************************************************"
  else
    echo 2>&1 "*******************************************************************************"
    echo 2>&1 " The installed assembler does not support the SSE command set."
    echo 2>&1 " Update your binutils package if you want to compile SSE support."
    echo 2>&1 "*******************************************************************************"
    have_sse=no
  fi
fi

dnl Checks for library functions.
AC_DISABLE_STATIC
AM_PROG_LIBTOOL

SDL_VERSION=1.1.0
AM_PATH_SDL($SDL_VERSION, :,
            AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!]))

hiddenbindir='${exec_prefix}/fake64/bin'
AC_SUBST(hiddenbindir)

libcpudir='${exec_prefix}/fake64/plugins/cpu'
AC_SUBST(libcpudir)

libaudiodir='${exec_prefix}/fake64/plugins/audio'
AC_SUBST(libaudiodir)

libvideodir='${exec_prefix}/fake64/plugins/video'
AC_SUBST(libvideodir)

libinputdir='${exec_prefix}/fake64/plugins/input'
AC_SUBST(libinputdir)

temp_pref=$prefix
test "x$temp_pref" = xNONE && temp_pref=$ac_default_prefix
temp_pref="$temp_pref/fake64/plugins"

AC_DEFINE_UNQUOTED(CPU_DIR, "${temp_pref}/cpu", [Libcpu dir])
AC_DEFINE_UNQUOTED(AUDIO_DIR, "${temp_pref}/audio", [Libaudio dir])
AC_DEFINE_UNQUOTED(VIDEO_DIR, "${temp_pref}/video", [Libvideo dir])
AC_DEFINE_UNQUOTED(INPUT_DIR, "${temp_pref}/input", [Libinput dir])

AC_ARG_ENABLE(notinstalled, [  --enable-notinstalled	  Change module search path])
AC_ARG_ENABLE(exitonunim, [  --enable-exitonunim	  Exit on unimplemented registers])
AC_ARG_ENABLE(debugpif, [  --enable-debugpif	  Enable pifram debugging])
AC_ARG_ENABLE(debugvi, [  --enable-debugvi	  Enable VI debugging])
AC_ARG_ENABLE(gprof, [  --enable-gprof	  Enable gprofing])
AC_ARG_ENABLE(debug, [  --enable-debug	  Enable debugging])

test "$enable_notinstalled" = "yes" && AC_DEFINE(NOT_INSTALLED, 1, [Not installed])
test "$enable_exitonunim" = "yes" && AC_DEFINE(EXIT_ON_UNIM, 1, [Exit on unimplemented interrupts])
test "$enable_debugpif" = "yes" && AC_DEFINE(DEBUG_PIF, 1, [PIFRAM Debugging])
test "$enable_debugvi" = "yes" && AC_DEFINE(DEBUG_VI, 1, [VI Debugging])
test "$enable_gprof" = "yes" && gprof='-p -pg -static' && AC_DEFINE(GPROF, 1, [Gprof enabled])
test "$enable_gprof" != "yes" && fomit='-fomit-frame-pointer'
test "$enable_debug" = "yes" && AC_DEFINE(DEBUG, 1, [Global Debugging])

test "$enable_gprof" = "yes" && mad_linking="-L../cpucore_pure_c/.libs/ -L../rs_audio_module/.libs/ -L../bfs_input_module/.libs/ -L../sliders_video_module/.libs/ -L../rs_video_module -lcpu -lvideo -laudiors -linput"

AC_SUBST(gprof)
AC_SUBST(fomit)
AC_SUBST(mad_linking)

dnl -pg and -fomit-frame-pointer aren't compatible

AC_OUTPUT(rs_audio_module/Makefile cpucore_pure_c/Makefile romloader/Makefile bfs_input_module/Makefile sliders_video_module/Makefile rs_video_module/Makefile bfs_audio_module/Makefile Makefile cpucore_dynarec/Makefile testsuite/Makefile)
